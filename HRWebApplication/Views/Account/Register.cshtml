@model HRWebApplication.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <!-- Meta, title, CSS, favicons, etc. -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Register Form | HR</title>
    <!-- Bootstrap -->
    <link href="~/vendors/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome -->
    <link href="~/vendors/font-awesome/css/font-awesome.min.css" rel="stylesheet">
    <!-- NProgress -->
    <link href="~/vendors/nprogress/nprogress.css" rel="stylesheet">
    <!-- bootstrap-datetimepicker -->
    <link href="~/vendors/bootstrap-datetimepicker/build/css/bootstrap-datetimepicker.min.css" rel="stylesheet" />
    <!-- Animate.css -->
    @*<link href="~/vendors/animate.css/animate.min.css" rel="stylesheet">*@
    <!-- Custom Theme Style -->
    <link href="~/build/css/custom.min.css" rel="stylesheet">
</head>
<body class="login">
    <div>
        <a class="hiddenanchor" id="signup"></a>
        <a class="hiddenanchor" id="signin"></a>
        <div class="login_wrapper">
            <div class="animate form login_form">
                <section class="login_content">
                    @using (Html.BeginForm("Register", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        <h1>Register User</h1>
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div>
                            @Html.DropDownListFor(m => m.RoleName, new SelectList(ViewBag.Roles, "Value", "Text"), new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.RoleName, "", new { @class = "text-danger" })
                        </div><br />
                        <div>
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = "Email" })
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                        </div>
                        <div>
                            @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", @placeholder = "Username" })
                            @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
                        </div>
                        <div>
                            @Html.TextBoxFor(m => m.FullName, new { @class = "form-control", @placeholder = "Full Name" })
                            @Html.ValidationMessageFor(m => m.FullName, "", new { @class = "text-danger" })
                        </div>
                        <div>
                            @Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = "Password" })
                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                        </div>
                        <div>
                            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", @placeholder = "Confirm Password" })
                            @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>
                        <div>
                            @Html.TextBoxFor(m => m.Identification, new { @class = "form-control", @placeholder = "Identification" })
                            @Html.ValidationMessageFor(m => m.Identification, "", new { @class = "text-danger" })
                        </div>
                        <div>
                            @*@Html.TextBoxFor(m => m.DOB, new { @class = "form-control", @placeholder = "Date of Birth" })*@
                            <div class="input-group date" id="Tanggal">
                                @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control", @placeholder = "Date of Birth" } })
                                <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                            </div>
                            @Html.ValidationMessageFor(m => m.DOB, "", new { @class = "text-danger" })
                        </div><br />
                        <div>
                            @Html.TextBoxFor(m => m.Height, new { @class = "form-control", @placeholder = "Height" })
                            @Html.ValidationMessageFor(m => m.Height, "", new { @class = "text-danger" })
                        </div>
                        <div>
                            @Html.TextBoxFor(m => m.Weight, new { @class = "form-control", @placeholder = "Weight" })
                            @Html.ValidationMessageFor(m => m.Weight, "", new { @class = "text-danger" })
                        </div>
                        <div>
                            @Html.TextBoxFor(m => m.Phone1, new { @class = "form-control", @placeholder = "Phone 1" })
                            @Html.ValidationMessageFor(m => m.Phone1, "", new { @class = "text-danger" })
                        </div>
                        <div>
                            @Html.TextBoxFor(m => m.Phone2, new { @class = "form-control", @placeholder = "Phone 2" })
                            @Html.ValidationMessageFor(m => m.Phone2, "", new { @class = "text-danger" })
                        </div>
                        <div>
                            @Html.TextBoxFor(m => m.Address1, new { @class = "form-control", @placeholder = "Address 1" })
                            @Html.ValidationMessageFor(m => m.Address1, "", new { @class = "text-danger" })
                        </div>
                        <div>
                            @Html.TextBoxFor(m => m.Address2, new { @class = "form-control", @placeholder = "Address 2" })
                            @Html.ValidationMessageFor(m => m.Address2, "", new { @class = "text-danger" })
                        </div>
                        <div>
                            @Html.TextBoxFor(m => m.Notes, new { @class = "form-control", @placeholder = "Notes" })
                            @Html.ValidationMessageFor(m => m.Notes, "", new { @class = "text-danger" })
                        </div>
                        <div>
                            <input type="submit" value="Create" class="btn btn-default submit" />
                        </div>
                        <div style="padding-top: 8px">
                            @Html.ActionLink("Back to Home Page", "Index", "Home")
                        </div>
                        <div class="clearfix"></div>
                        <div class="separator">
                            <div class="clearfix"></div>
                            <br />
                            <div>
                                <h1><i class="fa fa-shield"></i> Lucky Star Security</h1>
                                Copyrights of <a href="#"><strong>LSS</strong></a> &copy; @DateTime.Now.Year
                            </div>
                        </div>
                    }
                </section>
            </div>
        </div>
    </div>
    <script src="~/vendors/jquery/dist/jquery.min.js"></script>
    <script src="~/vendors/moment/min/moment.min.js"></script>
    <script src="~/vendors/bootstrap-datetimepicker/build/js/bootstrap-datetimepicker.min.js"></script>
    <script type="text/javascript">
    $(document).ready(function () {
        $('#Tanggal').datetimepicker({
            //format: 'YYYY-MM-DD'
        });
    });
    </script>
</body>
</html>



@*<h2>@ViewBag.Title.</h2>

    @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        <h4>Create a new account.</h4>
        <hr />
        @Html.ValidationSummary("", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.UserName, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" class="btn btn-default" value="Register" />
            </div>
        </div>
    }

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@
